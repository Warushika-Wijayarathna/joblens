<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CargoProjects">
    <cargoProject FILE="$PROJECT_DIR$/backend/Cargo.toml" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ca76d63e-bb54-4cf8-9930-7c9a42766ee2" name="Changes" comment="Initial commit: Setup Rust backend with Actix-web framework&#10;&#10;- Add basic Rust backend structure with Actix-web&#10;- Setup project modules (ai, db, models, routes, utils)&#10;- Configure dependencies (actix-web, serde, tokio)&#10;- Add .gitignore for Rust project with IDE and OS exclusions&#10;- Initialize joblens job search/analysis platform" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="RsBuildProfile:dev" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="ROOT_SYNC" value="SYNC" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;Warushika-Wijayarathna&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/Warushika-Wijayarathna/joblens.git&quot;,
    &quot;accountId&quot;: &quot;c424aced-1603-43a7-8adf-270fd8a269b2&quot;
  }
}</component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="YNVkcKY8" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="31pfOANWorjf9sVzLzoM3uKHZSn" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "master",
    "kotlin-language-version-configured": "true",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "org.rust.cargo.project.model.PROJECT_DISCOVERY": "true",
    "org.rust.first.attach.projects": "true",
    "settings.editor.selected.configurable": "project.propVCSSupport.DirectoryMappings",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="Cargo.Run backend">
    <configuration name="Run backend" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="buildProfileId" value="dev" />
      <option name="command" value="run --package backend --bin backend" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/backend" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test backend" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="test --workspace" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/backend" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
  </component>
  <component name="RustProjectSettings">
    <option name="toolchainHomeDirectory" value="$USER_HOME$/.cargo/bin" />
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-a94e463ab2e7-intellij.indexing.shared.core-IU-243.26574.91" />
        <option value="bundled-js-predefined-d6986cc7102b-1632447f56bf-JavaScript-IU-243.26574.91" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ca76d63e-bb54-4cf8-9930-7c9a42766ee2" name="Changes" comment="" />
      <created>1756225901140</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1756225901140</updated>
      <workItem from="1756225901563" duration="4404000" />
      <workItem from="1756230348370" duration="1476000" />
    </task>
    <task id="LOCAL-00001" summary="Initial commit: Setup Rust backend with Actix-web framework&#10;&#10;- Add basic Rust backend structure with Actix-web&#10;- Setup project modules (ai, db, models, routes, utils)&#10;- Configure dependencies (actix-web, serde, tokio)&#10;- Add .gitignore for Rust project with IDE and OS exclusions&#10;- Initialize joblens job search/analysis platform">
      <option name="closed" value="true" />
      <created>1756229597975</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1756229597975</updated>
    </task>
    <task id="LOCAL-00002" summary="Initial commit: Setup Rust backend with Actix-web framework&#10;&#10;- Add basic Rust backend structure with Actix-web&#10;- Setup project modules (ai, db, models, routes, utils)&#10;- Configure dependencies (actix-web, serde, tokio)&#10;- Add .gitignore for Rust project with IDE and OS exclusions&#10;- Initialize joblens job search/analysis platform">
      <option name="closed" value="true" />
      <created>1756229687201</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1756229687201</updated>
    </task>
    <task id="LOCAL-00003" summary="Initial commit: Setup Rust backend with Actix-web framework&#10;&#10;- Add basic Rust backend structure with Actix-web&#10;- Setup project modules (ai, db, models, routes, utils)&#10;- Configure dependencies (actix-web, serde, tokio)&#10;- Add .gitignore for Rust project with IDE and OS exclusions&#10;- Initialize joblens job search/analysis platform">
      <option name="closed" value="true" />
      <created>1756230292781</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1756230292781</updated>
    </task>
    <option name="localTasksCounter" value="4" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <ignored-roots>
      <path value="$PROJECT_DIR$/backend" />
      <path value="$PROJECT_DIR$" />
    </ignored-roots>
    <MESSAGE value="Initial commit: Setup Rust backend with Actix-web framework&#10;&#10;- Add basic Rust backend structure with Actix-web&#10;- Setup project modules (ai, db, models, routes, utils)&#10;- Configure dependencies (actix-web, serde, tokio)&#10;- Add .gitignore for Rust project with IDE and OS exclusions&#10;- Initialize joblens job search/analysis platform" />
    <option name="LAST_COMMIT_MESSAGE" value="Initial commit: Setup Rust backend with Actix-web framework&#10;&#10;- Add basic Rust backend structure with Actix-web&#10;- Setup project modules (ai, db, models, routes, utils)&#10;- Configure dependencies (actix-web, serde, tokio)&#10;- Add .gitignore for Rust project with IDE and OS exclusions&#10;- Initialize joblens job search/analysis platform" />
  </component>
</project>